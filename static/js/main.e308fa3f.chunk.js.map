{"version":3,"sources":["icons/search.svg","icons/person-add.svg","icons/cancel.svg","icons/arrow-back.svg","ListContacts/ListContacts.view.js","ListContacts/ListContacts.controller.js","ImageInput/ImageInput.controller.js","CreateContact/CreateContact.view.js","CreateContact/CreateContact.controller.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ListContacts_view","Wrapper","styled","div","_templateObject","cancel","Search","_templateObject2","search","personAdd","Avatar","_templateObject3","Details","_templateObject4","ListContacts","state","term","searchHandler","event","_this","setState","target","value","x","name","toLowerCase","includes","_this2","this","react_default","a","createElement","type","placeholder","onChange","react_router_dom","to","className","props","contacts","filter","searchingFor","map","contact","key","phone","style","backgroundImage","concat","avatarURL","email","onClick","onDeleteContact","Component","readFileAsDataURL","file","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","ImageInput","handleFileChange","files","match","then","url","_this$props","position","backgroundRepeat","backgroundPosition","backgroundSize","required","top","left","width","height","opacity","cursor","React","CreateContact_view","CreateContact_view_templateObject","arrow","Form","form","CreateContact_view_templateObject2","CreateContact_view_templateObject3","CreateContact","handleSubmit","e","preventDefault","values","searlizeForm","hash","onCreateContact","onSubmit","ImageInput_controller","maxHeight","App","loadPage","_callee","response","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","stop","removeContact","c","react_router","exact","path","render","ListContacts_controller","_ref2","history","CreateContact_controller","createContact","push","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e308fa3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.b884e292.svg\";","module.exports = __webpack_public_path__ + \"static/media/person-add.e24cad82.svg\";","module.exports = __webpack_public_path__ + \"static/media/cancel.32cee437.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-back.c0c5c509.svg\";","import styled from 'styled-components';\r\nimport search from '../icons/search.svg'\r\nimport personAdd from '../icons/person-add.svg'\r\nimport cancel from '../icons/cancel.svg'\r\n\r\n\r\nexport default {\r\n   Wrapper: styled.div`\r\n   padding-top: 60px;\r\n   & h3{\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n   }\r\n   & ol{\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n   }\r\n   & li{\r\n    padding: 20px;\r\n    background: white;\r\n    display: flex;\r\n    margin: 20px;\r\n    border: 1px solid #d5d8df;\r\n    border-radius: 4px;\r\n   }\r\n   & button{\r\n    padding-left: 20px;\r\n    align-self: center;\r\n    width: 32px;\r\n    height: 32px;\r\n    background-color: transparent;\r\n    background-image: url(${cancel});\r\n    background-size: 100% 100%;\r\n    border: 0;\r\n    color: black;\r\n    font-size: 0;\r\n    vertical-align: middle;\r\n    cursor: pointer;\r\n    outline: none;\r\n   }\r\n   `,\r\n   Search: styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    top: 0;\r\n    border-bottom: 1px solid #d5d8df;\r\n    display: flex;\r\n    & input{\r\n    width: 100%;\r\n    padding: 20px 20px 20px 60px;\r\n    background-image: url(${search});\r\n    background-repeat: no-repeat;\r\n    background-position: 20px center;\r\n    background-size: 1.2em;\r\n    font-size: 1.2em;\r\n    border: 0;\r\n    outline: none;\r\n    }\r\n    & .add-contact {\r\n    display: block;\r\n    width: 73px;\r\n    background: white;\r\n    background-image: url(${personAdd});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: 28px;\r\n    font-size: 0;\r\n    }\r\n   `,\r\n   Avatar: styled.div`\r\n    width: 60px;\r\n    height: 60px;\r\n    margin-right: 20px;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    border-radius: 50%;\r\n    flex-shrink: 0;\r\n   `,\r\n   Details: styled.div`\r\n    padding-left: 20px;\r\n    border-left: 1px solid #eee;\r\n    flex: 1;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    & p{\r\n    margin: 0;\r\n    min-width: 0;\r\n    white-space: nowrap;\r\n    }\r\n   `\r\n\r\n    \r\n    \r\n}\r\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ListContact from './ListContacts.view.js';\n\nclass ListContacts extends Component {\n  state = {\n    term: ''\n  }\n\n  searchingFor(term) {\n    return function (x){\n        return x.name.toLowerCase().includes(term.toLowerCase()) || !term;\n    }\n}\n\n  searchHandler = (event) => {\n    this.setState({\n        term: event.target.value\n    })\n}\n\n  render() {\n\n    return (\n      <ListContact.Wrapper>\n\n        <h3>Contact List</h3>\n\n        <ListContact.Search>\n          <input type='text' placeholder='Search contacts...' onChange={this.searchHandler} value={this.state.term}/>\n          <Link to='/create'className='add-contact'>Add Contact</Link>\n        </ListContact.Search>\n\n      <ol>\n      {this.props.contacts.filter(this.searchingFor(this.state.term)).map( contact => (\n        <li key={contact.phone}>\n              <ListContact.Avatar style={{\n                backgroundImage: `url(${contact.avatarURL})`}}> \n              </ListContact.Avatar>\n              <ListContact.Details>\n                <p>{contact.name}</p>\n                <p>{contact.email}</p>\n                <p>{contact.phone}</p>\n              </ListContact.Details>\n              <button onClick={() => this.props.onDeleteContact(contact)}>\n                Remove\n              </button>\n        </li>\n      ))}\n      </ol>\n\n      </ListContact.Wrapper>\n    )\n  }\n}\n\nexport default ListContacts\n","import React from 'react'\n\nconst readFileAsDataURL = (file) =>\n  new Promise(resolve => {\n    const reader = new FileReader()\n    reader.onload = (event) => {\n      resolve(event.target.result)\n    }\n    reader.readAsDataURL(file)\n  })\n\nclass ImageInput extends React.Component {\n  state = {\n    value: ''\n  }\n\n  handleFileChange = (event) => {\n    const file = event.target.files[0]\n    if (file && file.type.match(/^image\\//)) {\n      readFileAsDataURL(file).then(url => {\n          this.setState({ value: url })\n        })\n    } else {\n      this.setState({ value: '' })\n    }\n  }\n\n  render() {\n    const { className, name } = this.props\n    const { value } = this.state\n    const style = {\n      position: 'relative'\n    }\n\n    if (value) {\n      style.backgroundImage = `url(\"${value}\")`\n      style.backgroundRepeat = 'no-repeat'\n      style.backgroundPosition = 'center'\n      style.backgroundSize = 'cover'\n    }\n\n    return (\n      <div className={className} style={style}>\n        <input type=\"hidden\" name={name} value={value} />\n        <input type=\"file\" onChange={this.handleFileChange} required\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            opacity: 0,\n            cursor: 'pointer'\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ImageInput\n","import styled from 'styled-components';\r\nimport arrow from '../icons/arrow-back.svg'\r\n\r\nexport default {\r\n    Wrapper: styled.div`\r\n    & .close-create-contact{\r\n    display: block;\r\n    width: 60px;\r\n    height: 60px;\r\n    background-image: url(${arrow});\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: 30px;\r\n    font-size: 0;\r\n    }\r\n    `,\r\n    Form: styled.form`\r\n    padding: 20px;\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    `,\r\n    Details: styled.div`\r\n    margin-left: 20px;\r\n    & input{\r\n    width: 100%;\r\n    padding: 5px 10px;\r\n    margin-bottom: 10px;\r\n    font-size: inherit;\r\n    background: transparent;\r\n    border: none;\r\n    border-bottom: 1px solid #ccc;\r\n    outline: 0;\r\n    }\r\n    & button{\r\n    margin-top: 20px;\r\n    background: #ccc;\r\n    padding: 10px;\r\n    text-transform: uppercase;\r\n    font-size: inherit;\r\n    border: none;\r\n    outline: 0;\r\n    }\r\n    `,\r\n    \r\n}\r\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport searlizeForm from 'form-serialize'\nimport ImageInput from '../ImageInput/ImageInput.controller'\nimport Contact from './CreateContact.view.js';\n\nclass CreateContact extends Component {\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const values = searlizeForm(e.target, { hash: true });\n    if(this.props.onCreateContact) {\n      this.props.onCreateContact(values)\n    }\n  }\n\n  render() {\n    return (\n      <Contact.Wrapper>\n        <Link to='/' className='close-create-contact'>Close</Link>\n        <Contact.Form onSubmit={this.handleSubmit}>\n          <ImageInput className='create-contact-avatar-input' name='avatarURL' maxHeight={64}/>\n          <Contact.Details>\n            <input type='text' placeholder='Name' name='name' required/>\n            <input type='email' placeholder='Email' name='email' required/>\n            <input type='tel' placeholder='Phone' name='phone' required/>\n            <button style={{cursor: 'pointer'}}>Add Contact</button>\n          </Contact.Details>\n        </Contact.Form>\n      </Contact.Wrapper>\n    )\n  }\n}\n\nexport default CreateContact\n","import React, { Component } from 'react';\nimport ListContacts from './ListContacts/ListContacts.controller'\nimport CreateContact from './CreateContact/CreateContact.controller'\nimport { Route } from 'react-router-dom'\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    contacts: []\n  }\n\n  loadPage = async () => { \n    const response = await axios.get('contacts.json')\n    const contacts = response.data;\n    this.setState({\n      contacts\n    }) \n}\n\n  componentDidMount(){\n    this.loadPage();\n}\n\n  removeContact = (contact) => {\n    this.setState((state) => ({\n      contacts: state.contacts.filter((c) => c.phone !== contact.phone)\n    }))\n  }\n\n  createContact(contact) {\n      this.setState(state => ({\n        contacts: state.contacts.concat([ contact ])\n      }))\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <Route exact path='/' render={() => (\n          <ListContacts\n            contacts={this.state.contacts}\n            onDeleteContact={this.removeContact}\n            />\n        )} />\n        <Route path='/create' render={({ history }) => (\n          <CreateContact\n            onCreateContact={(contact) => {\n              this.createContact(contact)\n              history.push('/')\n            }}\n          />\n        )} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n        // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n        // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>< App /></BrowserRouter>,\n    document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}